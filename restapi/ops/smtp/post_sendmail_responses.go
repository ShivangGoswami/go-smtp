// Code generated by go-swagger; DO NOT EDIT.

package smtp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "go-smtp/models"
)

// PostSendmailOKCode is the HTTP code returned for type PostSendmailOK
const PostSendmailOKCode int = 200

/*PostSendmailOK Generic success response

swagger:response postSendmailOK
*/
type PostSendmailOK struct {

	/*
	  In: Body
	*/
	Payload *models.Status `json:"body,omitempty"`
}

// NewPostSendmailOK creates PostSendmailOK with default headers values
func NewPostSendmailOK() *PostSendmailOK {

	return &PostSendmailOK{}
}

// WithPayload adds the payload to the post sendmail o k response
func (o *PostSendmailOK) WithPayload(payload *models.Status) *PostSendmailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post sendmail o k response
func (o *PostSendmailOK) SetPayload(payload *models.Status) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSendmailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostSendmailDefault Generic error response

swagger:response postSendmailDefault
*/
type PostSendmailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostSendmailDefault creates PostSendmailDefault with default headers values
func NewPostSendmailDefault(code int) *PostSendmailDefault {
	if code <= 0 {
		code = 500
	}

	return &PostSendmailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post sendmail default response
func (o *PostSendmailDefault) WithStatusCode(code int) *PostSendmailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post sendmail default response
func (o *PostSendmailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post sendmail default response
func (o *PostSendmailDefault) WithPayload(payload *models.Error) *PostSendmailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post sendmail default response
func (o *PostSendmailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSendmailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
